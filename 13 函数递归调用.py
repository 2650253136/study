# -*- coding:utf-8 -*-
# author: xiaoming

# -------------------------------------------递归介绍
# 函数嵌套调用的一种特殊形式
# 在调用一个函数的过程中又直接或者间接的调用本身
# 递归的本质就是循环,递归调用不应该无限的运行下去,必须在满足某种条件下结束递归调用

# 直接调用本身
# def f1():
#     print('is me...')
#     f1()
# f1()

# 间接调用本身
# def f1():
#     print('>>>>f1')
#     f2()
# def f2():
#     print('>>>>f2')
#     f1()
# f1()

# 递归的本质就是循环
# def f1():
#     print(111)
#     print(222)
#     print(333)
#     f1()
# f1()

# 递归调用不应该无限的运行下去,必须在满足某种条件下结束递归调用
# def f1(n):
#     if n == 10:
#         return
#     print(n)
#     n+=1
#     f1(n)
# f1(1)

# -------------------------------------------递归调用的两个阶段
# 回溯：一层一层调用下去
# 递推：满足某种条件结束递归调用，然后一层一层返回

# -------------------------------------------递归调用的案例
l = [1,2,[3,[4,[5,[6,[7,[8,[9,10,11]]]]]]]]
def f1(list1):
    for x in list1:
        if type(x) is list:
            f1(x)
        else:
            print(x)
f1(l)